in    k, n: int;
out   b   : int where b = 1;

local y_1   : int where y_1 = n;
local y_2, r: int where y_2 = 1 & r = 1;

P_1 :: [
   l_0: while (y_1 > (n-k)) do [
      l_1: request r;
      l_2: << b := b * y1; release r >>;
      l_3: y_1 := y_1 - 1;
   ];
   l_4:
]
||
P_2 :: [
   m_0: while (y_2 <= k) do [
      m_1: await y_1 + y_2 <= n;
      m_2: << request r; b := b div y2 >>;
      m_3: << release r; y_2 := y_2 + 1 >>
   ];
   m_4:
]
